% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/after_join.R
\name{after_join}
\alias{after_join}
\alias{after_inner_join}
\alias{after_left_join}
\alias{after_right_join}
\alias{after_full_join}
\alias{after_anti_join}
\alias{after_semi_join}
\title{Join tables based on one event happening after another}
\usage{
after_join(x, y, by_time, by_user, mode = "inner",
  type = "first-first", dt = 10000)

after_inner_join(x, y, by_time, by_user, type = "first-first")

after_left_join(x, y, by_time, by_user, type = "first-first")

after_right_join(x, y, by_time, by_user, type = "first-first")

after_full_join(x, y, by_time, by_user, type = "first-first")

after_anti_join(x, y, by_time, by_user, type = "first-first")

after_semi_join(x, y, by_time, by_user, type = "first-first")
}
\arguments{
\item{x}{A tbl that is the first event to occur in the funnel.}

\item{y}{A tbl that is the following event to occur in the funnel.}

\item{by_time}{A character vector to specify the time columns in x and y.
Must be a single column in each tbl. Note that this column is used to filter for time y >= time x.}

\item{by_user}{A character vector to specify the user or identity columns in x and y.
Must be a single column in each tbl.}

\item{mode}{The method used to join: "inner", "full", "anti", "semi", "right", "left"}

\item{type}{The type of funnel used to distinguish between event pairs,
such as "first-first", "last-first", "any-firstafter". See details for more.}

\item{dt}{the datatime difference for gap join}
}
\value{
A tbl
}
\description{
Join tables based on one event happening after another
}
\details{
TODO
}
\examples{

library(dplyr)
landed <- tribble(
  ~user_id, ~timestamp,
  1, "2018-07-01",
  2, "2018-07-01",
  2, "2018-07-01",
  3, "2018-07-02",
  4, "2018-07-01",
  4, "2018-07-04",
  5, "2018-07-10",
  5, "2018-07-12",
  6, "2018-07-07",
  6, "2018-07-08"
) \%>\%
  mutate(timestamp = as.Date(timestamp))

registered <- tribble(
  ~user_id, ~timestamp,
  1, "2018-07-02",
  3, "2018-07-02",
  4, "2018-06-10",
  4, "2018-07-02",
  5, "2018-07-11",
  6, "2018-07-10",
  6, "2018-07-11",
  7, "2018-07-07"
) \%>\%
 mutate(timestamp = as.Date(timestamp))

after_join(landed, registered, by_user = "user_id",
           by_time = "timestamp", mode = "inner", type = "first-first")

after_join(landed, registered, by_user = "user_id",
           by_time = "timestamp", mode = "inner", type = "any-firstafter")

after_join(landed, registered, by_user = "user_id",
           by_time = "timestamp", mode = "inner", type = "any-any")

# You can change mode to control the method of joining:
after_join(landed, registered, by_user = "user_id",
           by_time = "timestamp", mode = "left", type = "first-first")

after_join(landed, registered, by_user = "user_id",
           by_time = "timestamp", mode = "right", type = "any-firstafter")

after_join(landed, registered, by_user = "user_id",
           by_time = "timestamp", mode = "anti", type = "any-any")

}
